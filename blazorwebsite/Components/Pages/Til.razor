@page "/til"
@inject IWebHostEnvironment Env

<h2 class="text-2xl font-bold leading-8 tracking-tight">TIL</h2>

@if (htmlContent != null)
{
    <div class="markdown-content">
        @((MarkupString)htmlContent)
    </div>
}

@code {
    private string? htmlContent;

    protected override async Task OnInitializedAsync()
    {
        string filePath = Path.Combine(Env.ContentRootPath, "Content/Til/til.md");
        
        if (File.Exists(filePath))
        {
            string markdown = await File.ReadAllTextAsync(filePath);
            htmlContent = Markdig.Markdown.ToHtml(markdown);
            htmlContent = htmlContent.Replace("<h2>", "<h2 class='text-2xl font-bold leading-8 tracking-tight'>");
            
            // string outputPath = Path.Combine(Env.ContentRootPath, "output", "til","til.html");
            // Directory.CreateDirectory(Path.GetDirectoryName(outputPath)!);
            // await File.WriteAllTextAsync(outputPath, htmlContent);
        }
    }        
}
